# To calculate the time required for this algorithm
import time
start =time.perf_counter()

#--------------------------------------------------
#Xorshift looks like a shift register. 
#The bits moved in each time are generated by taking exclusive or from several bits in the register. 
#Each newly generated bit looks random
def XORSHIFT():
    a = 123456789
    b = 362436069
    c = 521288629
    x = 88675123

    #We choose 11,19 an 8 to generate the random numbers,doing the shift
    def RandomNum():
        nonlocal a,b,c,x
        t = a ^ ((a << 11) & 0xFFFFFFFF) 
        a, b, c = b, c, x
        x = (x ^ (x >> 19)) ^ (t ^ (t >> 8))
        return x
    return RandomNum

Rand = XORSHIFT()

for i in range(10):
    print (Rand())

#--------------------------------------------------
# To calculate the time required for this algorithm    
end = time.perf_counter()
print('Running time: %s Seconds'%(end-start))